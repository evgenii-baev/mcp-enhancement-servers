/**
 * @fileoverview Интерфейсы для инструмента Debugging Approach
 */

/**
 * @typedef {Object} DebuggingApproachData
 * @property {string} approachName - Название подхода к отладке
 * @property {string} issue - Описание проблемы для отладки
 * @property {string[]} [steps] - Шаги, выполненные в процессе отладки
 * @property {string} [findings] - Результаты отладки
 * @property {string} [resolution] - Решение проблемы
 */

/**
 * Типы подходов к отладке
 * @enum {string}
 */
export const DebuggingApproaches = {
    /** Бинарный поиск */
    BINARY_SEARCH: 'binary_search',

    /** Обратная инженерия */
    REVERSE_ENGINEERING: 'reverse_engineering',

    /** Разделяй и властвуй */
    DIVIDE_CONQUER: 'divide_conquer',

    /** Возврат назад */
    BACKTRACKING: 'backtracking',

    /** Метод исключения причин */
    CAUSE_ELIMINATION: 'cause_elimination',

    /** Нарезка программы */
    PROGRAM_SLICING: 'program_slicing'
};

// Экспорт для документации
export const DebuggingApproachParameters = {
    approachName: "Методология отладки, которую следует применить к технической проблеме. Каждый подход имеет уникальные преимущества для разных типов проблем. Например, 'binary_search' идеален для поиска проблем в больших наборах данных или длинных последовательностях операций, 'divide_conquer' эффективен для сложных систем с множеством компонентов, а 'cause_elimination' полезен при многочисленных потенциальных причинах сбоя.",

    issue: "Техническая проблема, требующая отладки. Подробное описание позволяет более эффективно применить выбранный подход к отладке. Объясните наблюдаемое поведение, ожидаемое поведение и любой соответствующий контекст, такой как среда, триггеры проблемы и недавние изменения.",

    steps: "Конкретные действия, предпринятые в процессе отладки. Каждый шаг должен быть конкретным, действенным и направленным на систематическое исследование проблемы согласно выбранному подходу. Записывайте каждое действие отдельным элементом массива для ясности и последовательности.",

    findings: "Наблюдения, открытия и выводы, полученные в процессе отладки. Это промежуточные результаты, которые направляют дальнейшее исследование и в конечном итоге приводят к решению. Сюда входят аномалии, закономерности или важные состояния, обнаруженные на разных этапах процесса.",

    resolution: "Окончательное решение или исправление проблемы. После определения первопричины это поле описывает конкретные изменения, необходимые для устранения проблемы, включая изменения кода, конфигурации или другие корректировки. Включите также проверку, что решение эффективно решает первоначальную проблему."
}; 