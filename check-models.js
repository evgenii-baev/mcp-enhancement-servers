// –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
const modelsPath = path.join(__dirname, 'packages/server-clear-thought/src/models/mental-models.json');

// –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
try {
    const modelsData = JSON.parse(fs.readFileSync(modelsPath, 'utf8'));

    // –ù–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –¥–æ–±–∞–≤–∏–ª–∏
    const programmingModels = [
        'composition_vs_inheritance',
        'single_responsibility',
        'interface_segregation',
        'actor_model',
        'time_space_complexity'
    ];

    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π:');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–æ–¥–µ–ª—å
    let allFound = true;
    programmingModels.forEach(modelId => {
        const model = modelsData.mental_models.find(m => m.id === modelId);
        if (model) {
            console.log(`‚úÖ –ú–æ–¥–µ–ª—å "${model.name}" –Ω–∞–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
        } else {
            console.log(`‚ùå –ú–æ–¥–µ–ª—å —Å ID "${modelId}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);
            allFound = false;
        }
    });

    // –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (allFound) {
        console.log('\nüéâ –í—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    } else {
        console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥–µ–ª–∏ –Ω–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ mental-models.json.');
    }

    // –í—ã–≤–æ–¥ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–µ–π
    console.log(`\n–í—Å–µ–≥–æ –º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –≤ —Ñ–∞–π–ª–µ: ${modelsData.mental_models.length}`);
} catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π:', error);
} 